{"version":3,"sources":["AuthController.js"],"names":["register","req","res","body","email","password","Admin","findOne","userExist","status","json","Message","hashedPassword","bcryptjs","hashSync","newAdmin","save","message","error","login","validPassword","compareSync","token","jwt","sign","user","id","_id","process","env","JWT_KEY","expiresIn","Error"],"mappings":"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","sourcesContent":["import Admin from \"../models/Admin.js\";\r\nimport bcryptjs from \"bcryptjs\";\r\nimport jwt from 'jsonwebtoken'\r\n\r\nexport const register = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    const userExist = await Admin.findOne({ email });\r\n    if (userExist) {\r\n      return res.status(404).json({ Message: \"User already exists\" });\r\n    }\r\n    const hashedPassword = bcryptjs.hashSync(password, 10);\r\n    const newAdmin = new Admin({\r\n      email,\r\n      password: hashedPassword,\r\n    });\r\n    await newAdmin.save();\r\n    res.status(201).json({ message: \"Registered successfully\" });\r\n  } catch (error) {\r\n    res\r\n      .status(500)\r\n      .json({ message: \"Intrenal server error\", error: error.message });\r\n  }\r\n};\r\nexport const login = async (req, res) => {\r\n  const { email, password } = req.body;\r\n  try {\r\n    const userExist = await Admin.findOne({ email });\r\n    if (!userExist) {\r\n      return res.status(404).json({ message: \"User not found\" });\r\n    }\r\n    const validPassword = bcryptjs.compareSync(password, userExist.password);\r\n    if (!validPassword) {\r\n      return res.status(400).json({ message: \"Incorrect password\" });\r\n    }\r\n    else{\r\n        const token = jwt.sign({user:userExist.email, id:userExist._id}, process.env.JWT_KEY, {expiresIn:'1d'})\r\n        res\r\n          .status(200)\r\n          .json({ message: \"Logged in\" , token:token});\r\n    }\r\n  } catch (error) {\r\n    res\r\n      .status(500)\r\n      .json({ Message: \"Internal server error\", Error: error.message });\r\n  }\r\n};\r\n"],"file":"AuthController.dev.js"}